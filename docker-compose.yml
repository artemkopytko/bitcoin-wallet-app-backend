# PROD HERE
version: '3.7'

# Common part for application
x-application-service: &application-service
    env_file:
        - .env
    build:
        context: .
        dockerfile: php/Dockerfile
    networks:
        - internal
    volumes:
        - app-storage:/var/www/html/storage
        - app-logs:/var/log
    depends_on:
        - mysql
        - redis

# Services
services:
    nginx:
        image: nginx:alpine
        container_name: nginx
        restart: unless-stopped
        tty: true
        ports:
            - "7000:80"
        volumes:
            - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
            - .:/var/www/html:delegated
            - ./public:/var/www/html/public
        depends_on:
            - laravel
        networks:
            - internal

    migrate:
        <<: *application-service
        container_name: migrate
        restart: no
        command: php artisan migrate
        healthcheck:
            test: ["CMD-SHELL", "php artisan migrate:status || exit 1"]
            interval: 30s
            timeout: 10s
            retries: 3

    laravel:
        <<: *application-service
        container_name: laravel
        expose:
            -   9000
#        ports:
#            - ${PHP_PORT:-8000}:8000
        restart: always
        command: php artisan octane:start --workers=8 --host 0.0.0.0 --port=9000
        healthcheck:
            test: ["CMD-SHELL", "curl -f http://localhost:9000 || exit 1"]
            interval: 30s
            timeout: 10s
            retries: 3

    queue:
        <<: *application-service
        container_name: queue
        restart: always
        command: php artisan queue:work
        healthcheck:
            test: ["CMD-SHELL", "php artisan queue:failed-table || exit 1"]
            interval: 30s
            timeout: 10s
            retries: 3

    #scheduler to run every minute
    scheduler:
        <<: *application-service
        container_name: scheduler
        restart: always
        command: /bin/sh -c "while :; do php artisan schedule:run; sleep 60; done"
        healthcheck:
            test: [ "CMD-SHELL", "php artisan schedule:run || exit 1" ]
            interval: 30s
            timeout: 10s
            retries: 3

    mysql:
        container_name: mysql
        image: mysql:8.0.29
        restart: always
        env_file:
            - .env
        healthcheck:
            test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
            interval: 1m30s
            timeout: 10s
            retries: 3
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            MYSQL_DATABASE: ${MYSQL_DATABASE}
        ports:
            - ${MYSQL_PORT:-3306}:3306
        volumes:
            - mysql:/var/lib/mysql
            - ./mysql/my.cnf:/etc/mysql/conf.d/my.cnf
        networks:
            - internal

    redis:
        container_name: redis
        image: 'redis:latest'
        env_file:
            - .env
        command: redis-server /usr/local/etc/redis/redis.conf --requirepass ${REDIS_PASSWORD}
        restart: always
        volumes:
            - redis:/data
            - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
        ports:
            - ${REDIS_PORT:-6379}:6379
        networks:
            - internal
networks:
    internal:
        driver: bridge

volumes:
    mysql:
    redis:
    app-storage:
    app-logs:
